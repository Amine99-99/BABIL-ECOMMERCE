from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = '7b3dbf77e6a4'
down_revision = 'ae91407a1d14'
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('role', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role_request_id', sa.Integer(), nullable=True))
        # Name the foreign key constraint as 'fk_role_request'
        batch_op.create_foreign_key('fk_role_request', 'role_requests', ['role_request_id'], ['id'])

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.add_column(sa.Column('role_request_id', sa.Integer(), nullable=True))
        # Name the foreign key constraint as 'fk_user_role_request'
        batch_op.create_foreign_key('fk_user_role_request', 'role_requests', ['role_request_id'], ['id'])

    # ### end Alembic commands ###

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        # Drop the foreign key constraint by name
        batch_op.drop_constraint('fk_user_role_request', type_='foreignkey')
        batch_op.drop_column('role_request_id')

    with op.batch_alter_table('role', schema=None) as batch_op:
        # Drop the foreign key constraint by name
        batch_op.drop_constraint('fk_role_request', type_='foreignkey')
        batch_op.drop_column('role_request_id')

    # ### end Alembic commands ###
